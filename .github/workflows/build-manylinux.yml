name: build manylinux

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y g++-12 libboost-all-dev libeigen3-dev libtiff-dev libjpeg-dev libjbig-dev liblzma-dev libzstd-dev libwebp-dev libdeflate-dev libleptonica-dev liblerc-dev

    - name: Check Packages Versions
      run: |
        dpkg-query -W -f='${binary:Package} ${Version}\n' g++-12 libboost-all-dev libeigen3-dev libtiff-dev libjpeg-dev libjbig-dev liblzma-dev libzstd-dev libwebp-dev libdeflate-dev libleptonica-dev liblerc-dev > new_pkgs_ubuntu.txt
        cat new_pkgs_ubuntu.txt

    - name: Get Environment
      id: get_env
      run: |
        DISTRIBUTION=$( lsb_release --short --id 2>/dev/null )
        CODENAME=$( lsb_release --short --codename 2>/dev/null )
        MACHINE=$( uname --machine 2>/dev/null )
        echo "SUFFIX=".${DISTRIBUTION}.${CODENAME}.${MACHINE}"" >> $GITHUB_ENV
      outputs:
          suffix: ${{ steps.get_env.outputs.SUFFIX }}

    - name: BuildSuffix
      run: |
        cd Cell2Fire
        make clean
        make
        mkdir binaries
        ldd Cell2Fire > binaries/ldd1.txt
        mv Cell2Fire binaries/Cell2Fire${{ env.SUFFIX }}
        
    - name: BuildStatic
      if: false
      run: |
        cd Cell2Fire
        make clean
        make -f makefile.static 2>&1 >> binaries/ldd2.txt || true
        ldd Cell2Fire 2>&1 >> binaries/ldd3.txt || true
        mv Cell2Fire binaries
        ls binaries

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: Cell2Fire/binaries
        if-no-files-found: error

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: binaries
        path: Cell2Fire

    - name: chmod
      run: |
        chmod +x Cell2Fire/Cell2Fire*

    - name: TestManyLinux
      if: false
      run: |
        cd test
        bash test.sh

    - name: TestSuffixFail
      continue-on-error: true
      run: |
        cd test
        bash test.sh ${{ needs.build.outputs.suffix }}

    - name: PrepareSuffix
      run: |
        sudo apt update
        sudo apt install -y libtiff5 libstdc++6 libgomp1 libgcc1

    - name: TestSuffix
      run: |
        cd test
        bash test.sh ${{ needs.build.outputs.suffix }}
